(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))n(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function o(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(a){if(a.ep)return;a.ep=!0;const r=o(a);fetch(a.href,r)}})();const l="http://localhost:3000/api",i={async fetchAllPokemons(){try{const e=await fetch(`${l}/pokemons`);return e.ok?await e.json():null}catch(e){console.log(e)}},async fetchOnePokemon(e){try{const t=await fetch(`${l}/pokemon/${e}`);return t.ok?await t.json():null}catch(t){console.log(t)}},async fetchAllTypes(){try{const e=await fetch(`${l}/types`);return e.ok?await e.json():null}catch(e){console.log(e)}},async fetchTypePokemons(e){try{const t=await fetch(`${l}/type/${e}/pokemons`);return t.ok?await t.json():null}catch(t){console.log(t)}},async fetchTeams(){try{const e=await fetch(`${l}/teams/`);return e.ok?await e.json():null}catch(e){console.log(e)}},async fetchTeamsAndPokemons(){try{const e=await fetch(`${l}/teams/pokemons`);return e.ok?await e.json():null}catch(e){console.log(e)}},async fetchOneTeam(e){try{const t=await fetch(`${l}/team/${e}/pokemons`);return t.ok?await t.json():null}catch(t){console.log(t)}},async createTeam(e){try{const t=await fetch(`${l}/team/`,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(e)});return t.ok?await t.json():null}catch(t){console.log(t)}},async addPokemonToTeam(e,t){try{const o=await fetch(`${l}/team/${t}/pokemon/${e}`);if(!o.ok)return null;const n=await o.json();return console.log(n),n}catch(o){console.log(o)}},async editTeamName(e,t){try{const{name:o}=t;return(await fetch(`${l}/team/${e}`,{headers:{"Content-Type":"application/json"},method:"PUT",body:JSON.stringify(t)})).ok?!0:null}catch(o){console.log(o)}},async removePokemonFromTeam(e,t){try{const o=await fetch(`${l}/team/${t}/pokemon/${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"});return o.ok?await o.json():null}catch(o){console.log(o)}},async removeTeam(e){try{const t=await fetch(`${l}/team/${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return!0}catch(t){return console.error("Erreur lors de la suppression de l'équipe:",t),null}}},p={mainContainer:document.querySelector("#app"),cleanBoard(){p.mainContainer.innerHTML=""}},c={async handleClickTypeBtn(e){const{typeId:t}=e.target.dataset,o=await i.fetchTypePokemons(t);p.cleanBoard(),o.pokemons.forEach(n=>{p.mainContainer.appendChild(u.displayPokemon(n))})},async handleClickModalDetail(e){const{pkmId:t}=e.target.closest(".card").dataset,o=await i.fetchOnePokemon(t),n=await i.fetchTeams();document.querySelector(".btn_add_team"),u.displayModalDetail(o,n)},async handleClickTypeMenu(){const e=await i.fetchAllTypes();p.cleanBoard(),e.forEach(t=>{p.mainContainer.appendChild(u.displayTypeBtn(t))})},async handleClickTeamMenu(){const e=await i.fetchTeamsAndPokemons();p.cleanBoard(),e.forEach(u.displayTeamBox),document.querySelectorAll(".btnModalTeam").forEach(t=>{t.addEventListener("click",c.handleClickTeamModal)})},async handleClickTeamModal(e){const{teamId:t}=e.target.closest("section").dataset,o=await i.fetchOneTeam(t);u.displayTeamModal(o)},handleClickCloseModal(e){e.target.closest(".modal").classList.remove("is-active")},async handleClickAddTeamMenu(){document.querySelector("#add_team_modal").classList.add("is-active"),document.querySelector("#form_team_modal").addEventListener("submit",c.handleSubmitAddTeam)},async handleSubmitAddTeam(e){e.preventDefault(),console.log(e.target);const t=Object.fromEntries(new FormData(e.target));await i.createTeam(t),c.handleClickTeamMenu(),c.handleClickCloseModal(e)},handleClickEditBtn(e){const t=document.querySelector("#team_modal"),o=t.querySelector("h2"),n=t.querySelector("form");n[0].placeholder=o.textContent,o.classList.toggle("hidden"),n.classList.toggle("hidden")},async handleSubmitFormTeamName(e){e.preventDefault();const{teamId:t}=e.target.dataset,o=Object.fromEntries(new FormData(e.target)),n=await i.editTeamName(t,o),a=document.querySelector("#team_modal");if(n){const r=a.querySelector("h2"),s=document.querySelector(`[data-team-id="${t}"]`);s.querySelector(".team-name").textContent=o.team_name,r.textContent=o.team_name,c.handleClickEditBtn(),c.handleClickCloseModal(e)}else console.log("Le titre n'a pas pu être mis à jour")},async handleSubmitPokemonToTeam(e){e.preventDefault();const{pkmId:t}=e.target.dataset,o=e.target[0].value,n=await i.addPokemonToTeam(t,o);c.handleClickCloseModal(e),u.displayTeamModal(n)},async handleClickRemovePokemonFromTeam(e){const{pkmId:t,teamId:o}=e.target.dataset,n=await i.removePokemonFromTeam(t,o);u.displayTeamModal(n)},async handleClickRemoveTeam(e){const t=e.currentTarget.dataset.teamId;if(!t){console.error("ID de l'équipe non trouvé");return}try{if(await i.removeTeam(t)!==null){const n=document.querySelector(".modal.is-active");n&&n.classList.remove("is-active");const a=document.querySelector(`.box[data-team-id='${t}']`);a?a.remove():console.warn("Carte de l'équipe non trouvée dans le DOM"),console.log(`Équipe avec l'ID ${t} supprimée.`)}else console.error("Impossible de supprimer l'équipe. L'équipe n'existe peut-être pas.")}catch(o){console.error("Erreur lors de la suppression de l'équipe:",o)}}},u={displayPokemon(e){const o=document.querySelector("#pokemon-list-item-template").content.cloneNode(!0);return o.querySelector("img").src=`./assets/img/${e.id}.webp`,o.querySelector("p").textContent=`${e.id} - ${e.name}`,o.querySelector(".card").dataset.pkmId=e.id,o.querySelector("a").addEventListener("click",c.handleClickModalDetail),o},displayModalDetail(e,t){const o=document.querySelector(".modal_team_types");pkm_detail.querySelector(".pkm_name").textContent=`${e.id} - ${e.name}`,pkm_detail.querySelector("img").src=`./assets/img/${e.id}.webp`,o.innerHTML="",e.types.forEach(s=>o.textContent+=`${s.name} `),pkm_detail.querySelectorAll("[slot]").forEach(s=>{pkm_detail.querySelector(`.pokemon-${s.slot}`).textContent=e[s.slot],s.value=e[s.slot]});const a=document.querySelector("#form_add_pkm_team");a.dataset.pkmId=e.id,a.addEventListener("submit",c.handleSubmitPokemonToTeam);const r=a[0];r.innerHTML="",t.forEach(s=>{const m=document.createElement("option");m.textContent=s.name,m.value=s.id,r.appendChild(m)}),pkm_detail.querySelector(".modal-background").addEventListener("click",c.handleClickCloseModal),pkm_detail.classList.add("is-active")},displayTypeBtn(e){const o=document.querySelector("#types-list-item-template").content.cloneNode(!0),n=o.querySelector("button");return n.textContent=e.name,n.style.backgroundColor=e.color,n.dataset.typeId=e.id,n.addEventListener("click",c.handleClickTypeBtn),o},displayTeamModal(e){tbody_team.innerHTML="";const t=document.querySelector("#template-row-table");e.pokemons.forEach(r=>{const s=t.content.cloneNode(!0);s.querySelectorAll("[slot]").forEach(h=>{h.slot==="types"?r.types.forEach(k=>{s.querySelector(`[slot=${h.slot}]`).textContent+=`${k.name} `}):s.querySelector(`[slot=${h.slot}]`).textContent=r[h.slot]});const f=s.querySelector("[slot=options]"),y=document.createElement("i");y.classList.add("fa","fa-trash"),y.dataset.pkmId=r.id,y.dataset.teamId=e.id,y.addEventListener("click",c.handleClickRemovePokemonFromTeam),f.appendChild(y),tbody_team.appendChild(s)});const o=team_modal.querySelector(".edit"),n=team_modal.querySelector("form");o.addEventListener("click",c.handleClickEditBtn),n.dataset.teamId=e.id,n.addEventListener("submit",c.handleSubmitFormTeamName),team_modal.querySelector(".team_name").textContent=e.name,team_modal.classList.add("is-active");const a=team_modal.querySelector(".remove");a.dataset.teamId=e.id,a.addEventListener("click",c.handleClickRemoveTeam)},displayTeamBox(e){var a;const o=document.querySelector("#team-list-item").content.cloneNode(!0);o.querySelector("section").dataset.teamId=e.id,o.querySelector(".team-name").textContent=e.name,o.querySelector(".team-description").textContent=e.description;const n=o.querySelector(".imgContainer");(a=e==null?void 0:e.pokemons)==null||a.forEach(r=>{const s=document.createElement("img"),m=document.createElement("figure");m.classList.add("image","is-64x64"),s.src=`./assets/img/${r.id}.webp`,s.classList.add("is-rounded"),m.appendChild(s),n.appendChild(m)}),p.mainContainer.appendChild(o)}},d={mainContainer:document.querySelector("#app"),navBar:document.querySelector("#navbar_main"),async init(){d.getAllPokemonsAndDisplay(),d.dipatchNavBarListeners(),d.dispatchCloseBtnEvent(),d.burgerMenu()},dipatchNavBarListeners(){d.navBar.querySelector("#nav-item-home").addEventListener("click",d.getAllPokemonsAndDisplay),d.navBar.querySelector("#nav-item-type").addEventListener("click",c.handleClickTypeMenu),d.navBar.querySelector("#nav-item-team").addEventListener("click",c.handleClickTeamMenu),d.navBar.querySelector("#nav-item-add-team").addEventListener("click",c.handleClickAddTeamMenu)},burgerMenu(){const e=document.querySelector(".navbar-brand"),t=document.querySelector(".navbar-menu");e.addEventListener("click",()=>{t.classList.toggle("is-active")})},dispatchCloseBtnEvent(){document.querySelectorAll(".close").forEach(t=>t.addEventListener("click",c.handleClickCloseModal))},async getAllPokemonsAndDisplay(){const e=await i.fetchAllPokemons();p.cleanBoard(),e.forEach(t=>{d.mainContainer.appendChild(u.displayPokemon(t))})}};document.addEventListener("DOMContentLoaded",d.init);
